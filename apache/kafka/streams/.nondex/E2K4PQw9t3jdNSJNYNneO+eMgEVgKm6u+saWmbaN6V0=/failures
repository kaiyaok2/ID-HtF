org.apache.kafka.streams.KafkaStreamsTest.shouldThrowTimeoutExceptionWhenThreadProducerFutureDoesNotComplete
org.apache.kafka.streams.TopologyTest.streamStreamLeftJoinTopologyWithCustomStoresSuppliers
org.apache.kafka.streams.TopologyTest.streamStreamLeftJoinTopologyWithDefaultStoresNames
org.apache.kafka.streams.TopologyTest.streamStreamOuterJoinTopologyWithCustomStoresSuppliers
org.apache.kafka.streams.kstream.RepartitionTopicNamingTest.shouldReuseFirstRepartitionTopicNameWhenOptimizing
org.apache.kafka.streams.kstream.internals.CogroupedKStreamImplTest.shouldInsertRepartitionsTopicForUpstreamKeyModificationWithGroupedReusedInDifferentCogroupsWithOptimization
org.apache.kafka.streams.kstream.internals.CogroupedKStreamImplTest.shouldInsertRepartitionsTopicForUpstreamKeyModificationWithGroupedReusedInSameCogroupsWithOptimization
org.apache.kafka.streams.kstream.internals.CogroupedKStreamImplTest.shouldInsertRepartitionsTopicForUpstreamKeyModificationWithGroupedRemadeWithOptimization
org.apache.kafka.streams.kstream.internals.InternalStreamsBuilderTest.shouldHaveCorrectSourceTopicsForTableFromMergedStream
org.apache.kafka.streams.kstream.internals.graph.StreamsGraphTest.shouldNotOptimizeWithValueOrKeyChangingOperatorsAfterInitialKeyChange
org.apache.kafka.streams.kstream.internals.graph.StreamsGraphTest.shouldOptimizeSeveralMergeNodesWithCommonKeyChangingParent
org.apache.kafka.streams.processor.internals.ProcessorTopologyTest.shouldCreateStringWithMultipleSourcesAndTopics
org.apache.kafka.streams.processor.internals.ProcessorTopologyTest.shouldCreateStringWithSourceAndTopics
org.apache.kafka.streams.processor.internals.RepartitionOptimizingTest.shouldSendCorrectRecords_OPTIMIZED
org.apache.kafka.streams.processor.internals.RepartitionOptimizingTest.shouldSendCorrectResults_NO_OPTIMIZATION
org.apache.kafka.streams.processor.internals.RepartitionWithMergeOptimizingTest.shouldSendCorrectRecords_OPTIMIZED
org.apache.kafka.streams.processor.internals.StreamTaskTest.shouldCommitNextOffsetAndProcessorMetadataFromQueueIfAvailable
org.apache.kafka.streams.processor.internals.StreamTaskTest.shouldThrowTopologyExceptionIfTaskCreatedForUnknownTopic
org.apache.kafka.streams.processor.internals.TaskManagerTest.shouldRethrowTaskCorruptedExceptionFromStateUpdater
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignorTest.shouldOptimizeStatefulAndStatelessTaskTraffic[rackAwareStrategy=none]
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignorTest.shouldOptimizeStatefulAndStatelessTaskTraffic[rackAwareStrategy=min_traffic]
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignorTest.shouldRemainOriginalAssignmentWithoutTrafficCostForMinCostStrategy[rackAwareStrategy=min_traffic]
org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignorTest.shouldOptimizeStatefulAndStatelessTaskTraffic[rackAwareStrategy=balance_subtopology]
org.apache.kafka.streams.processor.internals.assignment.ClientTagAwareStandbyTaskAssignorTest.shouldDistributeClientsOnDifferentZoneTagsEvenWhenClientsReachedCapacity
org.apache.kafka.streams.processor.internals.assignment.ClientTagAwareStandbyTaskAssignorTest.shouldDistributeStandbyTasksWhenActiveTasksAreLocatedOnSameZone
org.apache.kafka.streams.state.internals.TimeOrderedKeyValueBufferTest.shouldFlush[0: test=in-memory buffer]
